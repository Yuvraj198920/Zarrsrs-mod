name: Build GDAL Zarr SRS Modifier

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual triggering

env:
  CMAKE_VERSION: 3.31.2  # Latest compatible version available in GitHub Actions
  GDAL_VERSION: 3.8.1    # GDAL version to use

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Visual Studio environment
      uses: microsoft/setup-msbuild@v1.3
      
    - name: Setup CMake
      uses: lukka/get-cmake@latest
    
    - name: Cache GDAL
      id: cache-gdal
      uses: actions/cache@v3
      with:
        path: C:/OSGeo4W
        key: ${{ runner.os }}-gdal-${{ env.GDAL_VERSION }}
    
    - name: Install GDAL (if not cached)
      if: steps.cache-gdal.outputs.cache-hit != 'true'
      run: |
        # Download and install OSGeo4W network installer
        Invoke-WebRequest -Uri "https://download.osgeo.org/osgeo4w/v2/osgeo4w-setup.exe" -OutFile "osgeo4w-setup.exe"
        
        # Perform silent installation of GDAL
        Start-Process -FilePath "osgeo4w-setup.exe" -ArgumentList "-q -k -r -A -s https://download.osgeo.org/osgeo4w/v2 -a x86_64 -P gdal,gdal-dev" -Wait
      shell: pwsh

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake -G "Visual Studio 17 2022" -A x64 -DGDAL_ROOT=C:/OSGeo4W ..
      
    - name: Build
      run: |
        cd build
        cmake --build . --config Release
    
    - name: Run basic tests
      run: |
        cd build
        set GDAL_DRIVER_PATH=./Release
        ./Release/test/basic_test.exe
      shell: cmd
      continue-on-error: true  # If there's no test binary yet, don't fail the build
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: gdal-zarr-srs-modifier-plugin
        path: |
          build/Release/gdal_zarr_srs_modifier.dll
          build/Release/gdal_zarr_srs_modifier.lib

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgdal-dev gdal-bin cmake build-essential
        
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake ..
      
    - name: Build
      run: |
        cd build
        cmake --build .
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: gdal-zarr-srs-modifier-plugin-linux
        path: |
          build/libgdal_zarr_srs_modifier.so